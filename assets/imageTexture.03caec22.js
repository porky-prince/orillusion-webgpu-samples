import"./modulepreload-polyfill.b7f2da20.js";import{b}from"./basic.vert.9475eb7d.js";import{i as U}from"./imageTexture.frag.b24f2b53.js";import{v as h,a as G}from"./cube.aa091a3d.js";import{b as B}from"./math.cb05c6db.js";var E="/orillusion-webgpu-samples/texture.webp";async function y(e){if(!navigator.gpu)throw new Error("Not Support WebGPU");const t=await navigator.gpu.requestAdapter();if(!t)throw new Error("No Adapter Found");const i=await t.requestDevice(),n=e.getContext("webgpu"),r=navigator.gpu.getPreferredCanvasFormat?navigator.gpu.getPreferredCanvasFormat():n.getPreferredFormat(t),o=window.devicePixelRatio||1;e.width=e.clientWidth*o,e.height=e.clientHeight*o;const a={width:e.width,height:e.height};return n.configure({device:i,format:r,compositingAlphaMode:"opaque"}),{device:i,context:n,format:r,size:a}}async function v(e,t,i){const n=await e.createRenderPipelineAsync({label:"Basic Pipline",layout:"auto",vertex:{module:e.createShaderModule({code:b}),entryPoint:"main",buffers:[{arrayStride:20,attributes:[{shaderLocation:0,offset:0,format:"float32x3"},{shaderLocation:1,offset:12,format:"float32x2"}]}]},fragment:{module:e.createShaderModule({code:U}),entryPoint:"main",targets:[{format:t}]},primitive:{topology:"triangle-list",cullMode:"back",frontFace:"ccw"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}}),r=e.createTexture({size:i,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),o=e.createBuffer({label:"GPUBuffer store vertex",size:h.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(o,0,h);const a=e.createBuffer({label:"GPUBuffer store 4x4 matrix",size:4*4*4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),u=e.createBindGroup({label:"Uniform Group with Matrix",layout:n.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:a}}]});return{pipeline:n,vertexBuffer:o,mvpBuffer:a,uniformGroup:u,depthTexture:r}}function C(e,t,i,n){const r=e.createCommandEncoder(),o={colorAttachments:[{view:t.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:i.depthTexture.createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}},a=r.beginRenderPass(o);a.setPipeline(i.pipeline),a.setBindGroup(0,i.uniformGroup),a.setBindGroup(1,n),a.setVertexBuffer(0,i.vertexBuffer),a.draw(G),a.end(),e.queue.submit([r.finish()])}async function R(){const e=document.querySelector("canvas");if(!e)throw new Error("No Canvas");const{device:t,context:i,format:n,size:r}=await y(e),o=await v(t,n,r),u=await(await fetch(E)).blob(),s=await createImageBitmap(u),p=[s.width,s.height],f=t.createTexture({size:p,format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT});t.queue.copyExternalImageToTexture({source:s},{texture:f},p);const m=t.createSampler({magFilter:"linear",minFilter:"linear"}),x=t.createBindGroup({label:"Texture Group with Texture/Sampler",layout:o.pipeline.getBindGroupLayout(1),entries:[{binding:0,resource:m},{binding:1,resource:f.createView()}]});let d=r.width/r.height;const w={x:0,y:0,z:-5},T={x:1,y:1,z:1},c={x:0,y:0,z:0};function l(){const g=Date.now()/1e3;c.x=Math.sin(g),c.y=Math.cos(g);const P=B(d,w,c,T);t.queue.writeBuffer(o.mvpBuffer,0,P.buffer),C(t,i,o,x),requestAnimationFrame(l)}l(),window.addEventListener("resize",()=>{r.width=e.width=e.clientWidth*devicePixelRatio,r.height=e.height=e.clientHeight*devicePixelRatio,o.depthTexture.destroy(),o.depthTexture=t.createTexture({size:r,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),d=r.width/r.height})}R();
